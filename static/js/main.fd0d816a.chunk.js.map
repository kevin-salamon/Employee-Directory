{"version":3,"sources":["components/Table.js","App.js","index.js"],"names":["Table","state","employeesState","employees","sortName","arr","sort","a","b","lastname","sortReset","id","sortByName","setState","filterByManager","filter","employee","role","filterByEngineer","filterBySalesman","resetTable","className","onClick","this","map","firstname","email","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"g2BAoGeA,G,iNA9FbC,MAAQ,CACNC,eAAgBC,G,EAGlBC,SAAW,SAACC,GACV,OAAOA,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,SAAWD,EAAEC,SAAW,GAAK,M,EAG3DC,UAAY,SAACL,GACX,OAAOA,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,GAAKH,EAAEG,GAAK,GAAK,M,EAG/CC,WAAa,WACX,EAAKC,SAAS,CAAEX,eAAgB,EAAKE,SAASD,M,EAGhDW,gBAAkB,WAChB,EAAKD,SAAS,CAAEX,eAAgBC,EAAUY,QAAO,SAAAC,GAAQ,MAAsB,YAAlBA,EAASC,W,EAGxEC,iBAAmB,WACjB,EAAKL,SAAS,CAAEX,eAAgBC,EAAUY,QAAO,SAAAC,GAAQ,MAAsB,aAAlBA,EAASC,W,EAGxEE,iBAAmB,WACjB,EAAKN,SAAS,CAAEX,eAAgBC,EAAUY,QAAO,SAAAC,GAAQ,MAAsB,aAAlBA,EAASC,W,EAGxEG,WAAa,WACX,EAAKP,SAAS,CAAEX,eAAgB,EAAKQ,UAAUP,M,wEAI/C,OACE,oCACA,yBAAKkB,UAAU,qBACb,wBAAIA,UAAU,qCAAd,uBAGF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uCACb,4BAAQA,UAAU,0CAA0CC,QAASC,KAAKX,YAA1E,sBAEF,yBAAKS,UAAU,uCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,2CAA2CC,QAASC,KAAKT,iBAA3E,uBAEF,yBAAKO,UAAU,YACb,4BAAQA,UAAU,2CAA2CC,QAASC,KAAKL,kBAA3E,wBAEF,yBAAKG,UAAU,YACb,4BAAQA,UAAU,2CAA2CC,QAASC,KAAKJ,kBAA3E,0BAKR,yBAAKE,UAAU,OACb,yBAAKA,UAAU,0CACb,2BAAOA,UAAU,iBACf,4BACE,2CACA,0CACA,yCACA,wCACA,sCAGAE,KAAKtB,MAAMC,eAAesB,KAAI,SAACR,GAAD,OAC9B,4BACE,4BAAKA,EAASL,IACd,4BAAKK,EAASS,WACd,4BAAKT,EAASP,UACd,4BAAKO,EAASC,MACd,4BAAKD,EAASU,cAMxB,yBAAKL,UAAU,OACb,yBAAKA,UAAU,yCACb,4BAAQA,UAAU,2CAA2CC,QAASC,KAAKH,YAA3E,uB,GArFQO,IAAMC,YCKXC,MALf,WACE,OAAO,kBAAC,EAAD,OCDTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fd0d816a.chunk.js","sourcesContent":["import React from \"react\";\nimport employees from \"../employees.json\"\nimport \"./style.css\"\n\nclass Table extends React.Component {\n\n  state = {\n    employeesState: employees\n  }\n\n  sortName = (arr) => {\n    return arr.sort((a, b) => a.lastname > b.lastname ? 1 : -1);\n  }\n\n  sortReset = (arr) => {\n    return arr.sort((a, b) => a.id > b.id ? 1 : -1);\n  }\n\n  sortByName = () => {\n    this.setState({ employeesState: this.sortName(employees)});\n  }\n\n  filterByManager = () => {\n    this.setState({ employeesState: employees.filter(employee => employee.role === \"Manager\")});\n  }\n\n  filterByEngineer = () => {\n    this.setState({ employeesState: employees.filter(employee => employee.role === \"Engineer\")});\n  }\n\n  filterBySalesman = () => {\n    this.setState({ employeesState: employees.filter(employee => employee.role === \"Salesman\")});\n  }\n\n  resetTable = () => {\n    this.setState({ employeesState: this.sortReset(employees) })\n  }\n\n  render() {\n    return (\n      <>\n      <div className=\"jumbotron bg-info\">\n        <h1 className=\"display-4 text-center main-header\">Employee Directory</h1>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 column-styling text-center\">\n            <button className=\"btn btn-primary long-button text-center\" onClick={this.sortByName}>Sort by Last Name</button>\n          </div>\n          <div className=\"col-sm-6 column-styling text-center\">\n            <div className=\"row\">\n              <div className=\"col-sm-4\">\n                <button className=\"btn btn-primary small-button text-center\" onClick={this.filterByManager}>Filter to Managers</button>\n              </div>\n              <div className=\"col-sm-4\">\n                <button className=\"btn btn-primary small-button text-center\" onClick={this.filterByEngineer}>Filter to Engineers</button>\n              </div>\n              <div className=\"col-sm-4\">\n                <button className=\"btn btn-primary small-button text-center\" onClick={this.filterBySalesman}>Filter to Salesmen</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12 table-column rounded bg-info\">\n            <table className=\"check rounded\">\n              <tr>\n                <th>Employee ID</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Position</th>\n                <th>Email</th>\n              </tr>\n              {\n                this.state.employeesState.map((employee) =>\n                <tr>\n                  <td>{employee.id}</td>\n                  <td>{employee.firstname}</td>\n                  <td>{employee.lastname}</td>\n                  <td>{employee.role}</td>\n                  <td>{employee.email}</td>\n                </tr>)\n              }\n            </table>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12 column-styling reset-column\">\n            <button className=\"btn btn-primary large-button text-center\" onClick={this.resetTable}>Reset Table</button>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n\n  \n}\n\nexport default Table;\n\n// make a function that says \"okay run render where x = the sort/filter function with proper arg\"\n// or make many functions that each have their specific render and make a wrapper function which calls them based on the input of the sort/filter function (x = this thing)\n","import React from \"react\";\nimport Table from \"./components/Table\"\n\n\nfunction App() {\n  return <Table />;\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}